//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibrariyEntities : DbContext
    {
        public LibrariyEntities()
            : base("name=LibrariyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<kitap> kitap { get; set; }
        public virtual DbSet<kullanici> kullanici { get; set; }
        public virtual DbSet<kutuphane> kutuphane { get; set; }
        public virtual DbSet<log> log { get; set; }
        public virtual DbSet<odunc> odunc { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tur> tur { get; set; }
        public virtual DbSet<yazarvesair> yazarvesair { get; set; }
    
        public virtual ObjectResult<kitapprocedure_Result> kitapprocedure(Nullable<int> kitapid, string kitapadi, string sayfasayisi, string konusu, Nullable<int> turid, Nullable<int> yazarsairid, string type)
        {
            var kitapidParameter = kitapid.HasValue ?
                new ObjectParameter("kitapid", kitapid) :
                new ObjectParameter("kitapid", typeof(int));
    
            var kitapadiParameter = kitapadi != null ?
                new ObjectParameter("kitapadi", kitapadi) :
                new ObjectParameter("kitapadi", typeof(string));
    
            var sayfasayisiParameter = sayfasayisi != null ?
                new ObjectParameter("sayfasayisi", sayfasayisi) :
                new ObjectParameter("sayfasayisi", typeof(string));
    
            var konusuParameter = konusu != null ?
                new ObjectParameter("konusu", konusu) :
                new ObjectParameter("konusu", typeof(string));
    
            var turidParameter = turid.HasValue ?
                new ObjectParameter("turid", turid) :
                new ObjectParameter("turid", typeof(int));
    
            var yazarsairidParameter = yazarsairid.HasValue ?
                new ObjectParameter("yazarsairid", yazarsairid) :
                new ObjectParameter("yazarsairid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kitapprocedure_Result>("kitapprocedure", kitapidParameter, kitapadiParameter, sayfasayisiParameter, konusuParameter, turidParameter, yazarsairidParameter, typeParameter);
        }
    
        public virtual ObjectResult<kullaniciprocedure_Result> kullaniciprocedure(Nullable<int> kullaniciid, string kullaniciadi, string kullanicisoyadi, string kullanicimail, string kullanicisifre, Nullable<int> kutuphaneid, string type)
        {
            var kullaniciidParameter = kullaniciid.HasValue ?
                new ObjectParameter("kullaniciid", kullaniciid) :
                new ObjectParameter("kullaniciid", typeof(int));
    
            var kullaniciadiParameter = kullaniciadi != null ?
                new ObjectParameter("kullaniciadi", kullaniciadi) :
                new ObjectParameter("kullaniciadi", typeof(string));
    
            var kullanicisoyadiParameter = kullanicisoyadi != null ?
                new ObjectParameter("kullanicisoyadi", kullanicisoyadi) :
                new ObjectParameter("kullanicisoyadi", typeof(string));
    
            var kullanicimailParameter = kullanicimail != null ?
                new ObjectParameter("kullanicimail", kullanicimail) :
                new ObjectParameter("kullanicimail", typeof(string));
    
            var kullanicisifreParameter = kullanicisifre != null ?
                new ObjectParameter("kullanicisifre", kullanicisifre) :
                new ObjectParameter("kullanicisifre", typeof(string));
    
            var kutuphaneidParameter = kutuphaneid.HasValue ?
                new ObjectParameter("kutuphaneid", kutuphaneid) :
                new ObjectParameter("kutuphaneid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kullaniciprocedure_Result>("kullaniciprocedure", kullaniciidParameter, kullaniciadiParameter, kullanicisoyadiParameter, kullanicimailParameter, kullanicisifreParameter, kutuphaneidParameter, typeParameter);
        }
    
        public virtual ObjectResult<kutuphaneprocedure_Result> kutuphaneprocedure(Nullable<int> kutuphaneid, string kutuphaneadi, string type)
        {
            var kutuphaneidParameter = kutuphaneid.HasValue ?
                new ObjectParameter("kutuphaneid", kutuphaneid) :
                new ObjectParameter("kutuphaneid", typeof(int));
    
            var kutuphaneadiParameter = kutuphaneadi != null ?
                new ObjectParameter("kutuphaneadi", kutuphaneadi) :
                new ObjectParameter("kutuphaneadi", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kutuphaneprocedure_Result>("kutuphaneprocedure", kutuphaneidParameter, kutuphaneadiParameter, typeParameter);
        }
    
        public virtual ObjectResult<oduncprocedure_Result> oduncprocedure(Nullable<int> oduncid, Nullable<System.DateTime> oduncalma, Nullable<System.DateTime> oduncverme, Nullable<int> kullaniciid, Nullable<int> kitapid, string type)
        {
            var oduncidParameter = oduncid.HasValue ?
                new ObjectParameter("oduncid", oduncid) :
                new ObjectParameter("oduncid", typeof(int));
    
            var oduncalmaParameter = oduncalma.HasValue ?
                new ObjectParameter("oduncalma", oduncalma) :
                new ObjectParameter("oduncalma", typeof(System.DateTime));
    
            var oduncvermeParameter = oduncverme.HasValue ?
                new ObjectParameter("oduncverme", oduncverme) :
                new ObjectParameter("oduncverme", typeof(System.DateTime));
    
            var kullaniciidParameter = kullaniciid.HasValue ?
                new ObjectParameter("kullaniciid", kullaniciid) :
                new ObjectParameter("kullaniciid", typeof(int));
    
            var kitapidParameter = kitapid.HasValue ?
                new ObjectParameter("kitapid", kitapid) :
                new ObjectParameter("kitapid", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<oduncprocedure_Result>("oduncprocedure", oduncidParameter, oduncalmaParameter, oduncvermeParameter, kullaniciidParameter, kitapidParameter, typeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<turprocedure_Result> turprocedure(Nullable<int> turid, string turadi, string type)
        {
            var turidParameter = turid.HasValue ?
                new ObjectParameter("turid", turid) :
                new ObjectParameter("turid", typeof(int));
    
            var turadiParameter = turadi != null ?
                new ObjectParameter("turadi", turadi) :
                new ObjectParameter("turadi", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<turprocedure_Result>("turprocedure", turidParameter, turadiParameter, typeParameter);
        }
    
        public virtual ObjectResult<yazarvesairprocedure_Result> yazarvesairprocedure(Nullable<int> yazarsairid, string yazarsairadi, string yazarsairsoyadi, string type)
        {
            var yazarsairidParameter = yazarsairid.HasValue ?
                new ObjectParameter("yazarsairid", yazarsairid) :
                new ObjectParameter("yazarsairid", typeof(int));
    
            var yazarsairadiParameter = yazarsairadi != null ?
                new ObjectParameter("yazarsairadi", yazarsairadi) :
                new ObjectParameter("yazarsairadi", typeof(string));
    
            var yazarsairsoyadiParameter = yazarsairsoyadi != null ?
                new ObjectParameter("yazarsairsoyadi", yazarsairsoyadi) :
                new ObjectParameter("yazarsairsoyadi", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<yazarvesairprocedure_Result>("yazarvesairprocedure", yazarsairidParameter, yazarsairadiParameter, yazarsairsoyadiParameter, typeParameter);
        }
    }
}
